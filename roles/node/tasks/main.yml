---
#  when: cluster_info.stdout.find('is running') != -1

#- debug: var=cluster_info
# - wait_for: host={{ item }} port=443 state=drained
#   with_items: "{{groups['masters']}}"
#   name: "kube-apiserver is available"

- include: "{{ item }}.yml"
  with_items:
    - "install"
    - "kubelet"
    - "kube-proxy"
  name: copying bianries

- service: "name={{ item }} state=started"
  with_items:
    - "kube-apiserver"
    - "kube-controller-manager"
    - "kube-scheduler"
  delegate_to: "{{groups.masters[0]}}"
  run_once: true


# start services
- service: "name={{ item }} state=started enabled=yes"
  with_items: "{{ node_bianries }}"
  delay: 10

# health check
- command: "kubectl get no {{inventory_hostname}}"
  register: node_stat
  delegate_to: "{{groups['masters'][0]}}"
  name: "kubectl get no {{inventory_hostname}}"
  changed_when: "'Ready' not in node_stat.stdout"

- set_fact:
    node_absent: "{{'Ready' not in node_stat.stdout}}"

- include: "restart-k8s.yml"
  when: node_absent
  retries: 10

